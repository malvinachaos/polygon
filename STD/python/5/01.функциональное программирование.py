# coding=koi8-r
'''
    Функциональное программирование - программирование, основанное на функциях

    Чистые функции - не имеют побочных эффектов и возвращают значение, зависящие
    только от аргумента 
'''

snake = [4, 3]
print("snake : {0}, {1}".format(snake[0], snake[1]))
def dirty(arg):
    snake.append(56)

dirty(snake)
print("Собсна, функция, приведенная выше является нечистой, т.к. она изменила"
    + "\nсостояние snake : {0}, {1}, {2}\n\n".format(snake[0], snake[1], snake[2]))

def clear(ur, mom, gay):
    no = ur + gay
    return no*gay

x = 5
y = 2
z = 3
print(x, y, z)
clear(x, y, z)
print(x, y, z)
print(clear(x, y, z))

print("\nФункция, работа которой описана выше, является чистой, так как не изменила"
        + "\nсостояние переменных")
'''
    Плюсы и минусы Чистых функций

    + легко поменять и протестировать
    + более эффективна, мемомизация(?)
    + легче обрабатывать параллельно

    - усложнают простую задачу ввода и вывода
    - порой сложный синтаксис
'''

