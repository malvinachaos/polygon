PROGRAM String_Is_more_than_255;


BEGIN
    { По умолчанию, количество символов в строке равно 255. Однако, это нужно  }
    { для совместимости со старыми программами. Есть ещё новые строки, от .Net,}
    { их длина ограничивается двумя гигабайтами. Однако, в PascalABC.NET они   }
    { отличаются, так как можно их изменять и копировать прямым присваиванием, }
    { а нумерация символов начинается с 1                                      }

    var st: string[27]  = 'Строка, ограниченная 27 симв';

    var kt:= ('Строка', ' из ', 'кортежа');
    println(kt);

    { Короткие строки имеют размерный тип, а прочие -- сылочный                }
    { Строки можно рассматривать как последовательность символов и как массивы }
    { символов.                                                                }
    st[8]:= '|';
    WriteLn(st, NewLine);

    st:= ReadLnString('Введите строку [STR]<<');

    WriteLn(st, NewLine);

    { Расширения .Print и .PrintLn рассматривают строку как последовательность }
    { символов, выводимых через пустой символ, который указывается в скобочках }
    st.PrintLn('_');
    WriteLn();
 
    { Длина строки                                                             }
    { Ниже функции подсчитывают фактическую длину строки                       }
    WriteLn('Длина строки st равна');
    st.Length.PrintLn;
    Length(st).PrintLn;

    st.Count.PrintLn;   {Подсчёт количества символов                           }
    { Установка нового размера не работает на строках, где изначально был      }
    { задан её размер (var st: string[27];)                                    }
    {                                                                          }
    SetLength(st, 10);
    st:= 'Строка, ограниченная ' + st.Length + ' символами';
    WriteLn(st, NewLine);
    st:= 'Строка, ограниченная ' + st.Length + ' символами';
    WriteLn(st, NewLine);


    { Пробуем                                                                  }
    var n_str:= ReadLnString('Введите строку [STR]<<');
    WriteLn('[Длинна данной строки]>> ', n_str.Length);
    SetLength(n_str, ReadLnInteger('Введите новый размер строки [INT]<<'));
    n_str:= ReadLnString('Введите строку [STR]<<');
    WriteLn('[Длина строки]>> ', n_str.Length, NewLine,
            '[Сама строка ]>> ', n_str);
    { ??? Как-то странно смысла в setlength для строк нет, кроме как обрезка   }
    { строк                                                                    }


    { Строки можно складывать и умножать на число. Btw, если строку сложить с  }
    { числом, то последнее будет преобразовано в строку                        }
    WriteLn('AOAO' + ' PEW' * 3);

END.
