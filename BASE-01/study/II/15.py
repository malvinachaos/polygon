# Вывести таблицу размером n x n, заполненную числами от 1 до n^2 по спирали,
#  1  2  3  4  5
# 16 17 18 19  6
# 15 24 25 20  7
# 14 23 22 21  8
# 13 12 11 10  9

n = int(input())
n2 = n**2
field = [0 for i in range(n2)]
# Моменты, когда надо повернуть: адрес равен n-1, или n2 - 1, или n2 - n
# Статичный список смещений
offset = (1, n, -1, -n)

# Текущий номер смещения, актуальное смещение получаем через offset[oset]
oset = 0
adr = 0

for i in range(n2):
    field[adr] = i + 1

    if (adr == n-1) or (adr == n2 - 1) or (adr == n2 - n) or (field[adr + offset[oset]] != 0):
        oset = (oset+1) % 4

    adr += offset[oset]

for i in range(n):
    print(*field[ (i * n):(i * n+n) ])

'''----------------------------------------------------------------------------
# Двигаться можно либо по горизонтали, либо по вертикали
# dx <- направление по горизонтали (-1 -- влево; 1 -- вправо; 0 -- не двигаться)
# dy <- направление по вертикали   (-1 -- вниз;  1 -- вверх;  0 -- не двигаться)
# Они будут меняться по часовой стрелке: 1 0 | 0 1 | -1 0 | 0 -1 | 1 0 |
x, y = 0, 0
dx, dy = 1, 0

for i in range(n**2):
    field[y][x] = i + 1

    # Одна из координат может выйти за пределы матрицы
    # Проверяем координату и содержимое следующей клетки матрицы
    flg = x + dx if dx else y + dy
    if (flg < 0) or (flg == n) or (field[y+dy][x+dx] != 0):
        dx, dy = -dy, dx
    x += dx
    y += dy

for i in field:
    print(*i)
----------------------------------------------------------------------------'''
